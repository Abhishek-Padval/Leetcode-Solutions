iven a string s, find the length of the longest substring without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.

/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLongestSubstring = function(s) {
    let seenIt = {};
  let p1 = 0;
  let p2 = 0;
  let result = 0;

  while (p2 < s.length) {
    if (seenIt[ s.charAt(p2) ] === undefined) {
      seenIt[ s.charAt(p2) ] = p2;
      p2++;
      result = Math.max(p2 - p1, result);
    } else {
      delete seenIt[ s.charAt(p1) ];
      p1++;
    }
  }
  return result;
};
